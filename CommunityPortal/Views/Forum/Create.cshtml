@model CommunityPortal.Models.Forum.ForumPost

@{
    ViewData["Title"] = "Create Post";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card forum-post">
                <div class="card-header">
                    <h2 class="mb-0 text-center">@ViewData["Title"]</h2>
                </div>
                <div class="card-body p-4">
                    <form asp-action="Create" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                        <div asp-validation-summary="All" class="text-danger mb-4"></div>
                        
                        <div class="mb-4">
                            <label asp-for="Title" class="form-label h6">Title</label>
                            <input asp-for="Title" class="form-control form-control-lg" maxlength="200" required 
                                   placeholder="Enter your post title..." />
                            <span asp-validation-for="Title" class="text-danger"></span>
                            <div class="form-text">Be clear and descriptive (maximum 200 characters)</div>
                        </div>

                        <div class="mb-4">
                            <label asp-for="Content" class="form-label h6">Content</label>
                            <textarea asp-for="Content" class="form-control" rows="8" required 
                                    placeholder="Share your thoughts..."></textarea>
                            <span asp-validation-for="Content" class="text-danger"></span>
                            <div class="form-text">Format your text to make it easy to read</div>
                        </div>

                        <div class="mb-4">
                            <label for="image" class="form-label h6">Image (optional)</label>
                            <div class="input-group">
                                <input type="file" id="image" name="image" class="form-control" accept="image/*" />
                            </div>
                            <div class="form-text">
                                <i class="bi bi-info-circle me-1"></i>
                                Supported formats: JPG, PNG, GIF (max 5MB)
                            </div>
                        </div>

                        <div class="d-flex justify-content-between align-items-center mt-4">
                            <a asp-action="Index" class="btn btn-outline-secondary px-4">
                                <i class="bi bi-arrow-left me-2"></i>Back to Forum
                            </a>
                            <button type="submit" class="btn btn-primary px-4">
                                <i class="bi bi-plus-circle me-2"></i>Create Post
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function() {
            // Form submission handling
            $('form').on('submit', function(e) {
                const form = $(this);
                const submitButton = form.find('button[type="submit"]');

                if (!form[0].checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                    // Don't disable button if form is invalid
                    return;
                }

                // Only disable the button if the form is valid
                submitButton.prop('disabled', true);
                submitButton.html('<span class="spinner-border spinner-border-sm me-2"></span>Creating...');
            });

            // Re-enable submit button when input changes after a failed validation
            $('input, textarea').on('input', function() {
                const form = $(this).closest('form');
                const submitButton = form.find('button[type="submit"]');
                submitButton.prop('disabled', false);
                submitButton.html('<i class="bi bi-plus-circle me-2"></i>Create Post');
            });

            // File size and type validation
            $('input[type="file"]').on('change', function() {
                if (this.files[0]) {
                    const file = this.files[0];
                    const fileSize = file.size;
                    const fileType = file.type;
                    const maxSize = 10 * 1024 * 1024; // 10MB
                    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'];

                    if (fileSize > maxSize) {
                        alert('File size must be less than 5MB');
                        this.value = '';
                        return;
                    }

                    if (!allowedTypes.includes(fileType)) {
                        alert('Only JPG, JPEG, PNG, and GIF files are allowed');
                        this.value = '';
                        return;
                    }
                }
            });

            // Character counter for title
            $('#Title').on('input', function() {
                const maxLength = 200;
                const currentLength = $(this).val().length;
                const remainingChars = maxLength - currentLength;
                
                if (!$('#titleCharCount').length) {
                    $(this).after('<small id="titleCharCount" class="form-text text-muted"></small>');
                }
                
                $('#titleCharCount').text(`${remainingChars} characters remaining`);
                
                if (remainingChars < 20) {
                    $('#titleCharCount').removeClass('text-muted').addClass('text-warning');
                } else {
                    $('#titleCharCount').removeClass('text-warning').addClass('text-muted');
                }
            });

            // Character counter for content
            $('#Content').on('input', function() {
                const maxLength = 5000;
                const currentLength = $(this).val().length;
                const remainingChars = maxLength - currentLength;
                
                if (!$('#contentCharCount').length) {
                    $(this).after('<small id="contentCharCount" class="form-text text-muted"></small>');
                }
                
                $('#contentCharCount').text(`${remainingChars} characters remaining`);
                
                if (remainingChars < 100) {
                    $('#contentCharCount').removeClass('text-muted').addClass('text-warning');
                } else {
                    $('#contentCharCount').removeClass('text-warning').addClass('text-muted');
                }
            });

            // Trigger character counters on page load
            $('#Title').trigger('input');
            $('#Content').trigger('input');
        });
    </script>
} 