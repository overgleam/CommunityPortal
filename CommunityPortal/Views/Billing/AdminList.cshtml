@model CommunityPortal.Models.Billing.BillListViewModel
@{
    ViewData["Title"] = "Billing Management";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Billing Management</h1>
        <a href="@Url.Action("CreateBill")" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Create New Bill
        </a>
    </div>

    <!-- Filters -->
    <div class="card border-0 shadow-sm mb-4">
        <div class="card-body">
            <form method="get" action="@Url.Action("Index")" class="row g-3">
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-search"></i></span>
                        <input type="text" class="form-control" placeholder="Search by ID, name, or period" 
                               name="searchTerm" value="@Model.SearchTerm">
                    </div>
                </div>

                <div class="col-md-3">
                    <select class="form-select" name="statusFilter">
                        <option value="">All Statuses</option>
                        <option value="Unpaid" selected="@(Model.StatusFilter == "Unpaid")">Unpaid</option>
                        <option value="Partially Paid" selected="@(Model.StatusFilter == "Partially Paid")">Partially Paid</option>
                        <option value="Paid" selected="@(Model.StatusFilter == "Paid")">Paid</option>
                        <option value="Overdue" selected="@(Model.StatusFilter == "Overdue")">Overdue</option>
                    </select>
                </div>

                <div class="col-md-3">
                    <select class="form-select" name="dateFilter">
                        <option value="">All Dates</option>
                        <option value="ThisMonth" selected="@(Model.DateFilter == "ThisMonth")">This Month</option>
                        <option value="Last3Months" selected="@(Model.DateFilter == "Last3Months")">Last 3 Months</option>
                        <option value="ThisYear" selected="@(Model.DateFilter == "ThisYear")">This Year</option>
                    </select>
                </div>

                <div class="col-md-2">
                    <button type="submit" class="btn btn-primary w-100">Filter</button>
                </div>

                <input type="hidden" name="sortBy" value="@Model.SortBy" />
                <input type="hidden" name="sortDirection" value="@Model.SortDirection" />
                <input type="hidden" name="page" value="1" />
            </form>
        </div>
    </div>

    <!-- Bills Table -->
    <div class="card border-0 shadow-sm">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>
                                <a href="@Url.Action("Index", new { 
                                   sortBy = "Id", 
                                   sortDirection = Model.SortBy == "Id" && Model.SortDirection == "asc" ? "desc" : "asc",
                                   searchTerm = Model.SearchTerm,
                                   statusFilter = Model.StatusFilter,
                                   dateFilter = Model.DateFilter,
                                   page = Model.PaginationInfo.CurrentPage
                                })">
                                    Bill #
                                    @if (Model.SortBy == "Id")
                                    {
                                        <i class="bi @(Model.SortDirection == "asc" ? "bi-arrow-up" : "bi-arrow-down")"></i>
                                    }
                                </a>
                            </th>
                            <th>
                                <a href="@Url.Action("Index", new { 
                                   sortBy = "Homeowner", 
                                   sortDirection = Model.SortBy == "Homeowner" && Model.SortDirection == "asc" ? "desc" : "asc",
                                   searchTerm = Model.SearchTerm,
                                   statusFilter = Model.StatusFilter,
                                   dateFilter = Model.DateFilter,
                                   page = Model.PaginationInfo.CurrentPage
                                })">
                                    Homeowner
                                    @if (Model.SortBy == "Homeowner")
                                    {
                                        <i class="bi @(Model.SortDirection == "asc" ? "bi-arrow-up" : "bi-arrow-down")"></i>
                                    }
                                </a>
                            </th>
                            <th>
                                <a href="@Url.Action("Index", new { 
                                   sortBy = "BillingPeriod", 
                                   sortDirection = Model.SortBy == "BillingPeriod" && Model.SortDirection == "asc" ? "desc" : "asc",
                                   searchTerm = Model.SearchTerm,
                                   statusFilter = Model.StatusFilter,
                                   dateFilter = Model.DateFilter,
                                   page = Model.PaginationInfo.CurrentPage
                                })">
                                    Period
                                    @if (Model.SortBy == "BillingPeriod")
                                    {
                                        <i class="bi @(Model.SortDirection == "asc" ? "bi-arrow-up" : "bi-arrow-down")"></i>
                                    }
                                </a>
                            </th>
                            <th>
                                <a href="@Url.Action("Index", new { 
                                   sortBy = "BillingDate", 
                                   sortDirection = Model.SortBy == "BillingDate" && Model.SortDirection == "asc" ? "desc" : "asc",
                                   searchTerm = Model.SearchTerm,
                                   statusFilter = Model.StatusFilter,
                                   dateFilter = Model.DateFilter,
                                   page = Model.PaginationInfo.CurrentPage
                                })">
                                    Bill Date
                                    @if (Model.SortBy == "BillingDate")
                                    {
                                        <i class="bi @(Model.SortDirection == "asc" ? "bi-arrow-up" : "bi-arrow-down")"></i>
                                    }
                                </a>
                            </th>
                            <th>
                                <a href="@Url.Action("Index", new { 
                                   sortBy = "DueDate", 
                                   sortDirection = Model.SortBy == "DueDate" && Model.SortDirection == "asc" ? "desc" : "asc",
                                   searchTerm = Model.SearchTerm,
                                   statusFilter = Model.StatusFilter,
                                   dateFilter = Model.DateFilter,
                                   page = Model.PaginationInfo.CurrentPage
                                })">
                                    Due Date
                                    @if (Model.SortBy == "DueDate")
                                    {
                                        <i class="bi @(Model.SortDirection == "asc" ? "bi-arrow-up" : "bi-arrow-down")"></i>
                                    }
                                </a>
                            </th>
                            <th>
                                <a href="@Url.Action("Index", new { 
                                   sortBy = "Amount", 
                                   sortDirection = Model.SortBy == "Amount" && Model.SortDirection == "asc" ? "desc" : "asc",
                                   searchTerm = Model.SearchTerm,
                                   statusFilter = Model.StatusFilter,
                                   dateFilter = Model.DateFilter,
                                   page = Model.PaginationInfo.CurrentPage
                                })">
                                    Amount
                                    @if (Model.SortBy == "Amount")
                                    {
                                        <i class="bi @(Model.SortDirection == "asc" ? "bi-arrow-up" : "bi-arrow-down")"></i>
                                    }
                                </a>
                            </th>
                            <th>
                                <a href="@Url.Action("Index", new { 
                                   sortBy = "Status", 
                                   sortDirection = Model.SortBy == "Status" && Model.SortDirection == "asc" ? "desc" : "asc",
                                   searchTerm = Model.SearchTerm,
                                   statusFilter = Model.StatusFilter,
                                   dateFilter = Model.DateFilter,
                                   page = Model.PaginationInfo.CurrentPage
                                })">
                                    Status
                                    @if (Model.SortBy == "Status")
                                    {
                                        <i class="bi @(Model.SortDirection == "asc" ? "bi-arrow-up" : "bi-arrow-down")"></i>
                                    }
                                </a>
                            </th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Bills.Any())
                        {
                            foreach (var bill in Model.Bills)
                            {
                                <tr>
                                    <td>@bill.Id</td>
                                    <td>@(bill.Homeowner.FirstName + " " + bill.Homeowner.LastName)</td>
                                    <td>@bill.BillingPeriod</td>
                                    <td>@bill.BillingDate.ToString("MMM dd, yyyy")</td>
                                    <td>@bill.DueDate.ToString("MMM dd, yyyy")</td>
                                    <td>@bill.TotalAmount.ToString("C2")</td>
                                    <td>
                                        <span class="badge @(bill.Status == "Overdue" ? "bg-danger" : 
                                                 bill.Status == "Paid" ? "bg-success" : 
                                                 bill.Status == "Partially Paid" ? "bg-warning" : "bg-secondary")">
                                            @bill.Status
                                        </span>
                                    </td>
                                    <td>
                                        <div class="dropdown">
                                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="dropdownMenuButton@(bill.Id)" data-bs-toggle="dropdown" aria-expanded="false">
                                                Actions
                                            </button>
                                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton@(bill.Id)">
                                                <li>
                                                    <a class="dropdown-item" href="@Url.Action("BillDetails", new { id = bill.Id })">
                                                        <i class="bi bi-eye"></i> View Details
                                                    </a>
                                                </li>
                                                <li>
                                                    <a class="dropdown-item" href="@Url.Action("EditBill", new { id = bill.Id })">
                                                        <i class="bi bi-pencil"></i> Edit
                                                    </a>
                                                </li>
                                                <li>
                                                    <a class="dropdown-item" href="@Url.Action("DownloadBill", new { id = bill.Id })">
                                                        <i class="bi bi-download"></i> Download
                                                    </a>
                                                </li>
                                                <li>
                                                    <hr class="dropdown-divider">
                                                </li>
                                                <li>
                                                    <a class="dropdown-item text-danger" href="#" data-bs-toggle="modal" data-bs-target="#deleteBillModal" data-bill-id="@bill.Id">
                                                        <i class="bi bi-trash"></i> Delete
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="8" class="text-center">No bills found matching the criteria.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Pagination -->
        @if (Model.PaginationInfo.TotalPages > 1)
        {
            <div class="card-footer">
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center mb-0">
                        <li class="page-item @(Model.PaginationInfo.CurrentPage == 1 ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { 
                               page = Model.PaginationInfo.CurrentPage - 1,
                               sortBy = Model.SortBy,
                               sortDirection = Model.SortDirection,
                               searchTerm = Model.SearchTerm,
                               statusFilter = Model.StatusFilter,
                               dateFilter = Model.DateFilter
                            })">
                                Previous
                            </a>
                        </li>

                        @for (int i = 1; i <= Model.PaginationInfo.TotalPages; i++)
                        {
                            <li class="page-item @(Model.PaginationInfo.CurrentPage == i ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { 
                                   page = i,
                                   sortBy = Model.SortBy,
                                   sortDirection = Model.SortDirection,
                                   searchTerm = Model.SearchTerm,
                                   statusFilter = Model.StatusFilter,
                                   dateFilter = Model.DateFilter
                                })">
                                    @i
                                </a>
                            </li>
                        }

                        <li class="page-item @(Model.PaginationInfo.CurrentPage == Model.PaginationInfo.TotalPages ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { 
                               page = Model.PaginationInfo.CurrentPage + 1,
                               sortBy = Model.SortBy,
                               sortDirection = Model.SortDirection,
                               searchTerm = Model.SearchTerm,
                               statusFilter = Model.StatusFilter,
                               dateFilter = Model.DateFilter
                            })">
                                Next
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        }
    </div>
</div>

<!-- Delete Bill Modal -->
<div class="modal fade" id="deleteBillModal" tabindex="-1" aria-labelledby="deleteBillModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteBillModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this bill? This action can't be undone.</p>
                <p class="text-muted small">Note: The bill will be soft-deleted and won't be visible to users, but the data will remain in the database.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteBillForm" method="post">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Set up delete bill modal
            $('#deleteBillModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var billId = button.data('bill-id');
                var form = $('#deleteBillForm');
                form.attr('action', '@Url.Action("DeleteBill")/' + billId);
            });
        });
    </script>
} 