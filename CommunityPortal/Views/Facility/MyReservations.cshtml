@model IEnumerable<CommunityPortal.Models.Facility.FacilityReservation>
@{
    ViewData["Title"] = "My Reservations";
}

<div class="container mt-4">
    <h1>My Facility Reservations</h1>

    <div class="row">
        @foreach (var reservation in Model)
        {
            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start">
                            <h5 class="card-title">@reservation.Facility.Name</h5>
                            <span class="badge @GetStatusBadgeClass(reservation.Status)">
                                @reservation.Status
                            </span>
                        </div>

                        <div class="reservation-details mt-3">
                            <p>
                                <i class="fas fa-calendar"></i>
                                <strong>Date:</strong> @reservation.ReservationDate.ToShortDateString()
                            </p>
                            <p>
                                <i class="fas fa-clock"></i>
                                <strong>Time:</strong> @reservation.StartTime.ToString("hh\\:mm") - @reservation.EndTime.ToString("hh\\:mm")
                            </p>
                            <p>
                                <i class="fas fa-users"></i>
                                <strong>Guests:</strong> @reservation.GuestCount
                            </p>
                            <p>
                                <i class="fas fa-dollar-sign"></i>
                                <strong>Total Price:</strong> $@reservation.TotalPrice
                            </p>

                            @if (!string.IsNullOrEmpty(reservation.SpecialRequests))
                            {
                                <p>
                                    <i class="fas fa-comment"></i>
                                    <strong>Special Requests:</strong> @reservation.SpecialRequests
                                </p>
                            }

                            @if (reservation.Status == CommunityPortal.Models.Facility.ReservationStatus.Rejected)
                            {
                                <p class="text-danger">
                                    <i class="fas fa-exclamation-circle"></i>
                                    <strong>Rejection Reason:</strong> @reservation.RejectionReason
                                </p>
                            }
                        </div>

                        @if (reservation.Status == CommunityPortal.Models.Facility.ReservationStatus.Pending ||
                             reservation.Status == CommunityPortal.Models.Facility.ReservationStatus.Approved)
                        {
                            <div class="mt-3">
                                <form asp-action="CancelReservation" method="post" style="display: inline;">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@reservation.Id" />
                                    <button type="submit" class="btn btn-danger" 
                                            onclick="return confirm('Are you sure you want to cancel this reservation?')">
                                        Cancel Reservation
                                    </button>
                                </form>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }

        @if (!Model.Any())
        {
            <div class="col-12">
                <div class="alert alert-info">
                    You don't have any facility reservations yet. 
                    <a asp-action="Index">Browse available facilities</a> to make a reservation.
                </div>
            </div>
        }
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(CommunityPortal.Models.Facility.ReservationStatus status)
    {
        return status switch
        {
            CommunityPortal.Models.Facility.ReservationStatus.Pending => "bg-warning",
            CommunityPortal.Models.Facility.ReservationStatus.Approved => "bg-success",
            CommunityPortal.Models.Facility.ReservationStatus.Rejected => "bg-danger",
            CommunityPortal.Models.Facility.ReservationStatus.Cancelled => "bg-secondary",
            _ => "bg-primary"
        };
    }
} 