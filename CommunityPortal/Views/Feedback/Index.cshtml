@using CommunityPortal.Models.Enums
@model IEnumerable<CommunityPortal.Models.Feedback>
@inject Microsoft.AspNetCore.Identity.UserManager<CommunityPortal.Models.ApplicationUser> UserManager

@{
    ViewData["Title"] = "Feedback Management";
}

<div class="container-fluid py-4">
    <div class="user-management-container">
        <div class="header-section mb-4">
            <h2>
                <i class="material-icons align-middle me-2">feedback</i>Feedback Management
            </h2>
            <p class="text-muted">Review and manage user feedback submissions</p>
        </div>

        <div class="d-flex justify-content-end">
            <button class="btn btn-outline-secondary" id="refreshBtn">
                <i class="material-icons align-middle me-1">refresh</i> Refresh
            </button>
        </div>

        @if (!Model.Any())
        {
            <div class="empty-state text-center py-5">
                <i class="material-icons empty-state-icon mb-3">inbox</i>
                <h3>No Feedback Yet</h3>
                <p class="text-muted mb-0">There are currently no feedback submissions to display.</p>
            </div>
        }
        else
        {
            <div class="table-container">
                <table id="feedbackTable" class="custom-table table table-hover">
                    <thead>
                        <tr>
                            <th style="width: 15%">
                                <i class="material-icons align-middle me-2 small">person</i>User
                            </th>
                            <th style="width: 5%">
                                <i class="material-icons align-middle me-2 small">badge</i>
                            </th>
                            <th style="width: 40%">
                                <i class="material-icons align-middle me-2 small">message</i>Message
                            </th>
                            <th style="width: 15%">
                                <i class="material-icons align-middle me-2 small">calendar_today</i>Submitted
                            </th>
                            <th style="width: 10%">
                                <i class="material-icons align-middle me-2 small">info</i>Status
                            </th>
                            <th style="width: 30%">
                                <i class="material-icons align-middle me-2 small">edit</i>Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var feedback in Model)
                        {
                            <tr>
                                <td>
                                    <div class="user-email">
                                        <i class="material-icons align-middle me-1 text-muted small">account_circle</i>
                                        <a asp-controller="Profile" asp-action="ViewProfile" asp-route-userId="@feedback.User.Id" class="text-decoration-none text-dark">
                                            @feedback.User.UserName
                                        </a>
                                    </div>
                                </td>
                                <td>
                                    @{
                                        var roles = UserManager.GetRolesAsync(feedback.User).Result;
                                        var roleName = roles.FirstOrDefault() ?? "Unknown";
                                    }
                                    <span class="role-badge @roleName.ToLower()">
                                        <i class="material-icons align-middle me-1 small">
                                            @(roleName.ToLower() switch
                                            {
                                                "admin" => "admin_panel_settings",
                                                "staff" => "support_agent",
                                                "homeowners" => "home",
                                                _ => "person"
                                            })
                                        </i>
                                    </span>
                                </td>
                                <td>
                                    @{
                                        var truncatedMessage = feedback.Message.Length > 100
                                        ? feedback.Message.Substring(0, 97) + "..."
                                        : feedback.Message;
                                    }
                                    <p class="mb-0">@truncatedMessage</p>
                                    @if (feedback.Message.Length > 100)
                                    {
                                        <button type="button" class="btn btn-link btn-sm p-0"
                                                data-bs-toggle="modal"
                                                data-bs-target="#feedbackModal-@feedback.Id">
                                            <i class="material-icons align-middle small">read_more</i> Read More
                                        </button>
                                    }
                                </td>
                                <td>
                                    <span class="text-muted">
                                        <i class="material-icons align-middle me-1 text-muted small">schedule</i>
                                        @feedback.CreatedAt.ToString("MMM dd, yyyy")
                                    </span>
                                </td>
                                <td>
                                    <span class="status-badge @(feedback.Status switch {
                                        FeedbackStatus.New => "approved",
                                        FeedbackStatus.InReview => "pending",
                                        FeedbackStatus.Resolved => "approved",
                                        FeedbackStatus.Rejected => "banned",
                                        _ => "unknown"
                                    })">
                                        <i class="material-icons align-middle me-1 small">
                                            @(feedback.Status switch
                                            {
                                                FeedbackStatus.New => "fiber_new",
                                                FeedbackStatus.InReview => "hourglass_empty",
                                                FeedbackStatus.Resolved => "check_circle",
                                                FeedbackStatus.Rejected => "cancel",
                                                _ => "help"
                                            })
                                        </i>
                                        @feedback.Status
                                    </span>
                                </td>
                                <td>
                                    <div class="action-buttons">
                                        <!-- Update Status Form -->
                                        <form asp-action="UpdateStatus" method="post" class="d-flex align-items-center gap-2">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="id" value="@feedback.Id" />
                                            <select name="status" class="form-select form-select-sm" style="width: auto;">
                                                @foreach (FeedbackStatus status in Enum.GetValues(typeof(FeedbackStatus)))
                                                {
                                                    <option value="@status" selected="@(feedback.Status == status ? "selected" : null)">
                                                        @status
                                                    </option>
                                                }
                                            </select>
                                            <button type="submit" class="btn custom-btn success">
                                                <i class="material-icons align-middle small">save</i>
                                            </button>
                                        </form>

                                        <!-- Delete Button -->
                                        <form asp-action="Delete" method="post">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="id" value="@feedback.Id" />
                                            <button type="submit" class="btn custom-btn danger delete-feedback-btn">
                                                <i class="material-icons align-middle small">delete</i>
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

<!-- Modals for Full Messages -->
@foreach (var feedback in Model)
{
    <div class="modal fade custom-modal" id="feedbackModal-@feedback.Id" tabindex="-1" aria-labelledby="feedbackModalLabel-@feedback.Id" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="feedbackModalLabel-@feedback.Id">
                        <i class="material-icons align-middle me-2">feedback</i>
                        Feedback from @feedback.User.UserName
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <small class="text-muted">
                            <i class="material-icons align-middle me-1 small">event</i>
                            Submitted on @feedback.CreatedAt.ToString("f")
                        </small>
                    </div>
                    <div class="feedback-message">
                        <p style="white-space: pre-wrap; word-break: break-word;">@feedback.Message</p>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="material-icons align-middle me-1">close</i>
                        Close
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".delete-feedback-btn").forEach(button => {
                button.addEventListener("click", function (event) {
                    event.preventDefault();
                    if (!confirm("Are you sure you want to delete this feedback?")) return;

                    let form = this.closest("form");
                    let formData = new FormData(form);

                    fetch(form.action, {
                        method: "POST",
                        body: formData,
                        headers: {
                            "RequestVerificationToken": formData.get("__RequestVerificationToken"),
                        }
                    }).then(response => {
                        if (response.ok) {
                            form.closest("tr").remove(); // Remove the row from the table
                        } else {
                            alert("Failed to delete feedback.");
                        }
                    }).catch(error => console.error("Error:", error));
                });
            });
        });

        //Pagination
        $(document).ready(function () {
            let table = $('#feedbackTable').DataTable({
                "paging": true,
                "searching": true, // Enable search functionality
                "ordering": true,
                "pageLength": 10,
                "lengthMenu": [5, 10, 25, 50, 100],
                "language": {
                    "lengthMenu": 'Show _MENU_ entries',
                    "search": "Search users:",
                    "paginate": {
                        "first": '<i class="material-icons">first_page</i>',
                        "last": '<i class="material-icons">last_page</i>',
                        "next": '<i class="material-icons">chevron_right</i>',
                        "previous": '<i class="material-icons">chevron_left</i>'
                    }
                },
                "dom": '<"top"f>rt<"bottom"lip><"clear">'
            });

            // Add custom styling to the search input
            $('.dataTables_filter input').addClass('custom-search');
            $('.dataTables_length select').addClass('custom-select');
        });

        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("refreshBtn").addEventListener("click", function () {
                location.reload();
            });
        });
    </script>
}

@section Styles {
    <!-- Add Google Fonts -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">

    <style>
 color: #1a202c;
        /* User Management Container */
        .user-management-container {
            padding: 2rem;
            background: #fff;
            border-radius: 15px;
            box-shadow: 0 2px 15px rgba(0,0,0,0.05);
        }

        .header-section h2 {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: #2c3e50;
            margin-bottom: 0.5rem;
        }

        .header-section .material-icons {
            font-size: 2rem;
            color: #3498db;
        }

        /* Table Container */
        .table-container {
            padding: 5px;
            background: #f8f9fa;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 0 20px rgba(0,0,0,0.05);
        }

        /* Table Styles */
        .custom-table {
            margin-bottom: 0;
        }

        .custom-table th {
            padding: 1rem;
            font-weight: 600;
            color: #2c3e50;
            border-bottom: 2px solid #e9ecef;
        }

        .custom-table td {
            padding: 1rem;
            vertical-align: middle;
        }

        /* User Email */
        .user-email {
            display: flex;
            align-items: center;
        }

        /* Role Badge */
        .role-badge {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.25rem 0.75rem;
            border-radius: 50px;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .role-badge.admin {
            background-color: #cff4fc;
            color: #055160;
        }

        .role-badge.staff {
            background-color: #d1e7dd;
            color: #0f5132;
        }

        .role-badge.homeowners {
            background-color: #fff3cd;
            color: #664d03;
        }

        /* Status Badge */
        .status-badge {
            display: inline-flex;
            align-items: center;
            gap: 0.25rem;
            padding: 0.5rem 1rem;
            border-radius: 50px;
            font-size: 0.875rem;
        }

        .status-badge.approved {
            background: #d4edda;
            color: #155724;
        }

        .status-badge.pending {
            background: #fff3cd;
            color: #856404;
        }

        .status-badge.banned {
            background: #f5c6cb;
            color: #721c24;
        }

        .status-badge.unknown {
            background: #e2e3e5;
            color: #6c757d;
        }

        /* Action Buttons */
        .action-buttons {
            display: flex;
            gap: 0.5rem;
            flex-wrap: wrap;
            justify-content: end;
        }

        /* Custom Buttons */
        .custom-btn {
            display: inline-flex;
            align-items: center;
            gap: 0.25rem;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            font-size: 0.875rem;
            transition: all 0.3s ease;
            border: none;
        }

        .custom-btn:hover {
            transform: translateY(-1px);
        }

        .custom-btn.success {
            background: #e8f5e9;
            color: #1b5e20;
        }

        .custom-btn.danger {
            background: #ffebee;
            color: #b71c1c;
        }

        /* Empty State */
        .empty-state {
            background: #fff;
            border-radius: 12px;
            padding: 3rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

        .empty-state-icon {
            font-size: 4rem;
            color: #a0aec0;
        }

        .empty-state h3 {
            color: #2d3748;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        /* Modal Styles */
        .custom-modal .modal-content {
            border-radius: 15px;
            border: none;
        }

        .custom-modal .modal-header {
            background: #f8f9fa;
            border-bottom: 2px solid #e9ecef;
        }

        .custom-modal .modal-title {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: #2c3e50;
        }

        .feedback-message p {
            background-color: #f8fafc;
            border-radius: 8px;
            padding: 1rem;
            margin: 0;
            border: 1px solid #e2e8f0;
        }

        /* DataTables Styling */
        .dataTables_wrapper .dataTables_filter input {
            margin-left: 1rem;
            padding: 8px 12px 8px 40px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 0.9rem;
            width: 250px;
            background: #fff url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23495057' viewBox='0 0 16 16'%3E%3Cpath d='M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z'%3E%3C/path%3E%3C/svg%3E") no-repeat 12px center;
            transition: all 0.2s;
        }

        .dataTables_wrapper .dataTables_filter input:focus {
            border-color: #86b7fe;
            outline: none;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }

        .dataTables_wrapper .dataTables_length select {
            padding: 8px 36px 8px 12px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 0.9rem;
            background: #fff url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e") no-repeat;
            background-position: right 12px center;
            background-size: 16px 12px;
            appearance: none;
            -webkit-appearance: none;
            cursor: pointer;
        }

        .dataTables_wrapper .dataTables_length select:focus {
            border-color: #86b7fe;
            outline: none;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }

        .dataTables_length label {
            margin-left: 15px;
            margin-top: 10px;
            display: flex;
            align-items: center;
            font-size: 16px;
            font-weight: 500;
        }

        .dataTables_info {
            margin-left: 15px;
            display: flex;
            align-items: center;
            font-size: 16px;
            font-weight: 500;
        }

        .dataTables_paginate {
            padding-bottom: 15px;
            font-size: 16px;
            font-weight: 500;
        }

        /* Refresh Button */
        .btn-outline-secondary {
            border-color: #e2e8f0;
            color: #4a5568;
            border-radius: 8px;
            padding: 0.5rem 1rem;
            transition: all 0.2s ease;
        }

        .btn-outline-secondary:hover {
            background-color: #f7fafc;
            border-color: #cbd5e0;
            color: #2d3748;
            transform: translateY(-1px);
        }

        /* Form Select */
        .form-select-sm {
            font-size: 0.85rem;
            padding-right: 2rem;
            font-family: 'Inter', sans-serif;
            border: 1px solid #ced4da;
            border-radius: 6px;
        }
    </style>
}