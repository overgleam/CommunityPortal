@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model IEnumerable<CommunityPortal.Models.ServiceRequest>
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Service Requests";
    Layout = User.IsInRole("admin") || User.IsInRole("staff") ? "_AdminLayout" : "_HomeownersLayout";
    var isHomeowner = User.IsInRole("homeowners");
}

<div class="container">
    <div class="row mb-4">
        <div class="col">
            <h2>@ViewData["Title"]</h2>
        </div>
        @if (isHomeowner)
        {
            <div class="col-auto">
                <a asp-controller="ServiceRequest" asp-action="Create" class="btn btn-primary">
                    <i class="material-icons">add</i> New Request
                </a>
            </div>
        }
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            No service requests found.
            @if (User.Identity.IsAuthenticated)
            {
                <div class="mt-2">
                    <small class="text-muted">
                        Debug Info:<br />
                        User Roles: @ViewBag.UserRoles<br />
                        Is Authenticated: @ViewBag.IsAuthenticated<br />
                        User ID: @ViewBag.UserId<br />
                        Is Homeowner Role: @isHomeowner
                    </small>
                </div>
            }
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Title</th>
                        <th>Category</th>
                        @if (User.IsInRole("admin") || User.IsInRole("staff"))
                        {
                            <th>Homeowner</th>
                        }
                        <th>Status</th>
                        <th>Created</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>@item.Title</td>
                            <td>@item.ServiceCategory.Name</td>
                            @if (User.IsInRole("admin") || User.IsInRole("staff"))
                            {
                                <td>@item.Homeowner.UserName</td>
                            }
                            <td>
                                <span class="badge rounded-pill bg-@GetStatusColor(item.Status)">
                                    @item.Status
                                </span>
                            </td>
                            <td>@item.CreatedAt.ToString("MMM dd, yyyy")</td>
                            <td>
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">
                                    <i class="material-icons">visibility</i>
                                </a>
                                @if (isHomeowner && item.Status == ServiceRequestStatus.Completed && item.Feedback == null)
                                {
                                    <a asp-action="SubmitFeedback" asp-route-id="@item.Id" class="btn btn-sm btn-success">
                                        <i class="material-icons">rate_review</i>
                                    </a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@functions {
    private string GetStatusColor(ServiceRequestStatus status)
    {
        return status switch
        {
            ServiceRequestStatus.Pending => "warning",
            ServiceRequestStatus.Assigned => "info",
            ServiceRequestStatus.InProgress => "primary",
            ServiceRequestStatus.Completed => "success",
            ServiceRequestStatus.Rejected => "danger",
            _ => "secondary"
        };
    }
}
