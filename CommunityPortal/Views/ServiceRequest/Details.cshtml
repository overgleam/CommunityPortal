@model CommunityPortal.Models.ServiceRequest
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Request Details";
    Layout = User.IsInRole("admin") || User.IsInRole("staff") ? "_AdminLayout" : "_HomeownersLayout";
    var currentUser = await UserManager.GetUserAsync(User);
}

<style>
    .service-request-card {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }
    
    .service-request-card:hover {
        box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
        transform: translateY(-2px);
    }
    
    .card-header {
        border-bottom: none;
        padding: 1.5rem;
    }
    
    .card-body {
        padding: 1.5rem;
    }
    
    .info-label {
        color: #6c757d;
        font-size: 0.9rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-bottom: 0.5rem;
    }
    
    .info-value {
        font-size: 1.1rem;
        margin-bottom: 1.5rem;
    }
    
    .status-badge {
        font-size: 0.9rem;
        padding: 0.5rem 1rem;
        border-radius: 50rem;
    }
    
    .btn {
        border-radius: 50rem;
        padding: 0.5rem 1.25rem;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
    }
    
    .btn:hover {
        transform: translateY(-1px);
    }
    
    .btn i {
        font-size: 1.1rem;
    }
    
    .table {
        border-radius: 0.5rem;
        overflow: hidden;
    }
    
    .table thead th {
        background-color: #f8f9fa;
        border-bottom: none;
        font-weight: 600;
        text-transform: uppercase;
        font-size: 0.85rem;
        letter-spacing: 0.5px;
    }
    
    .feedback-card {
        background-color: #f8f9fa;
        border: none;
        border-radius: 1rem;
    }
    
    .star-rating {
        color: #ffd700;
        font-size: 1.25rem;
    }

    .accordion-item {
        border: 1px solid rgba(0, 0, 0, 0.125);
        border-radius: 0.5rem;
        overflow: hidden;
    }

    .accordion-button {
        background-color: #f8f9fa;
        font-weight: 600;
        padding: 1rem 1.5rem;
    }

    .accordion-button:not(.collapsed) {
        background-color: #e9ecef;
        color: #212529;
        box-shadow: none;
    }

    .accordion-button:focus {
        box-shadow: none;
        border-color: rgba(0, 0, 0, 0.125);
    }

    .accordion-button::after {
        background-size: 1.25rem;
        transition: all 0.2s ease;
    }

    .badge {
        font-weight: 500;
        padding: 0.5em 0.75em;
    }

    .list-group-item {
        display: flex;
        align-items: center;
        padding: 0.75rem 1rem;
        border: none;
        border-bottom: 1px solid rgba(0, 0, 0, 0.125);
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .list-group-item:last-child {
        border-bottom: none;
    }

    .list-group-item:hover {
        background-color: #f8f9fa;
    }

    .list-group-item .form-check-input {
        margin-top: 0;
    }

    .list-group-item div {
        margin-left: 0.5rem;
    }

    .list-group-item small {
        display: block;
        margin-top: 0.25rem;
        font-size: 0.875rem;
    }

    #staffAssignmentAccordion .accordion-body {
        padding: 0;
    }

    #staffAssignmentAccordion .list-group {
        border-radius: 0;
    }
</style>

<div class="container py-4">
    <div class="row">
        <div class="@(User.IsInRole("homeowners") ? "col-md-12" : "col-md-8")">
            <div class="card service-request-card mb-4">
                <div class="card-header bg-white d-flex justify-content-between align-items-center">
                    <div>
                        <h3 class="mb-0 fw-bold">Service Request #@Model.Id</h3>
                        <p class="text-muted mb-0 mt-1">@Model.ServiceCategory.Name</p>
                    </div>
                    <span class="status-badge bg-@GetStatusColor(Model.Status)">
                        @Model.Status
                    </span>
                </div>
                <div class="card-body">
                    <div class="row g-4">
                        <div class="col-12">
                            <div class="info-label">Subject</div>
                            <div class="info-value">@Model.Title</div>
                            
                            <div class="info-label">Description</div>
                            <div class="info-value">@Model.Description</div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="info-label">House/Unit Number</div>
                            <div class="info-value">@Model.Location</div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="info-label">Preferred Schedule</div>
                            <div class="info-value">@Model.PreferredSchedule.ToString("MMM dd, yyyy hh:mm tt")</div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="info-label">Requested By</div>
                            <div class="info-value">@Model.Homeowner.UserName</div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="info-label">Requested At</div>
                            <div class="info-value">@Model.CreatedAt.ToString("MMM dd, yyyy hh:mm tt")</div>
                        </div>
                    </div>

                    @if (Model.StaffAssignments.Any())
                    {
                        <div class="mt-4">
                            <div class="info-label mb-3">Assigned Staff Members</div>
                            <div class="accordion" id="departmentAccordion">
                                @{
                                    var staffByDepartment = Model.StaffAssignments
                                        .Where(sa => sa.Staff.Staff != null)
                                        .GroupBy(sa => sa.Staff.Staff.Department)
                                        .OrderBy(g => g.Key);
                                }
                                @foreach (var departmentGroup in staffByDepartment)
                                {
                                    <div class="accordion-item mb-3">
                                        <h2 class="accordion-header">
                                            <button class="accordion-button" type="button" data-bs-toggle="collapse" 
                                                    data-bs-target="#department-@departmentGroup.Key.Replace(" ", "")" aria-expanded="true">
                                                @departmentGroup.Key
                                                <span class="badge bg-secondary ms-2">@departmentGroup.Count() staff</span>
                                            </button>
                                        </h2>
                                        <div id="department-@departmentGroup.Key.Replace(" ", "")" class="accordion-collapse collapse show">
                                            <div class="accordion-body p-0">
                                                <div class="table-responsive">
                                                    <table class="table table-hover mb-0">
                                                        <thead>
                                                            <tr>
                                                                <th>Staff Member</th>
                                                                <th>Position</th>
                                                                <th>Assigned At</th>
                                                                <th>Status</th>
                                                                @if (User.IsInRole("admin"))
                                                                {
                                                                    <th class="text-end">Actions</th>
                                                                }
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var assignment in departmentGroup)
                                                            {
                                                                <tr>
                                                                    <td>@assignment.Staff.UserName</td>
                                                                    <td>@assignment.Staff.Staff.Position</td>
                                                                    <td>@assignment.AssignedAt.ToString("MMM dd, yyyy hh:mm tt")</td>
                                                                    <td>
                                                                        @if (assignment.IsAccepted)
                                                                        {
                                                                            <span class="badge rounded-pill bg-success">Accepted</span>
                                                                        }
                                                                        else if (assignment.IsUnavailable)
                                                                        {
                                                                            <span class="badge rounded-pill bg-danger">Unavailable</span>
                                                                        }
                                                                        else
                                                                        {
                                                                            <span class="badge rounded-pill bg-warning">Pending</span>
                                                                            @if (assignment.StaffId == currentUser.Id)
                                                                            {
                                                                                <div class="btn-group ms-2">
                                                                                    <form asp-action="AcceptAssignment" method="post" class="d-inline me-1">
                                                                                        @Html.AntiForgeryToken()
                                                                                        <input type="hidden" name="requestId" value="@Model.Id" />
                                                                                        <button type="submit" class="btn btn-sm btn-success">
                                                                                            <i class="material-icons">check</i> Accept
                                                                                        </button>
                                                                                    </form>
                                                                                    <form asp-action="MarkUnavailable" method="post" class="d-inline">
                                                                                        @Html.AntiForgeryToken()
                                                                                        <input type="hidden" name="requestId" value="@Model.Id" />
                                                                                        <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to mark yourself as unavailable for this request?')">
                                                                                            <i class="material-icons">block</i> Unavailable
                                                                                        </button>
                                                                                    </form>
                                                                                </div>
                                                                            }
                                                                        }
                                                                    </td>
                                                                    @if (User.IsInRole("admin"))
                                                                    {
                                                                        <td class="text-end">
                                                                            <form asp-action="RemoveStaffAssignment" method="post" class="d-inline">
                                                                                @Html.AntiForgeryToken()
                                                                                <input type="hidden" name="requestId" value="@Model.Id" />
                                                                                <input type="hidden" name="staffId" value="@assignment.StaffId" />
                                                                                <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to remove this staff member from the request?')">
                                                                                    <i class="material-icons">person_remove</i>
                                                                                </button>
                                                                            </form>
                                                                        </td>
                                                                    }
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }

                    @if (Model.CompletedAt.HasValue)
                    {
                        <div class="mt-4">
                            <div class="info-label">Completed At</div>
                            <div class="info-value">@Model.CompletedAt.Value.ToString("MMM dd, yyyy hh:mm tt")</div>
                        </div>
                    }

                    @if (Model.Status == ServiceRequestStatus.Rejected && !string.IsNullOrEmpty(Model.RejectionReason))
                    {
                        <div class="alert alert-danger mt-4">
                            <h5 class="alert-heading fw-bold mb-2">Rejection Reason</h5>
                            <p class="mb-0">@Model.RejectionReason</p>
                        </div>
                    }

                    @if (Model.Status == ServiceRequestStatus.Cancelled)
                    {
                        <div class="alert alert-warning mt-4">
                            <h5 class="alert-heading fw-bold mb-2">Cancellation Details</h5>
                            <p class="mb-2"><strong>Cancelled At:</strong> @Model.CancelledAt?.ToString("MMM dd, yyyy hh:mm tt")</p>
                            @if (!string.IsNullOrEmpty(Model.CancellationReason))
                            {
                                <p class="mb-0"><strong>Reason:</strong> @Model.CancellationReason</p>
                            }
                        </div>
                    }

                    @if (Model.Feedback != null)
                    {
                        <div class="card feedback-card mt-4">
                            <div class="card-body">
                                <h5 class="card-title fw-bold mb-3">Feedback</h5>
                                <div class="mb-3">
                                    <div class="info-label">Rating</div>
                                    <div class="star-rating">
                                        @for (int i = 0; i < Model.Feedback.Rating; i++)
                                        {
                                            <i class="material-icons">star</i>
                                        }
                                        @for (int i = Model.Feedback.Rating; i < 5; i++)
                                        {
                                            <i class="material-icons">star_border</i>
                                        }
                                    </div>
                                </div>
                                @if (!string.IsNullOrEmpty(Model.Feedback.Comment))
                                {
                                    <div>
                                        <div class="info-label">Comment</div>
                                        <p class="mb-0">@Model.Feedback.Comment</p>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
            
        <div class="col-md-4">
            @if (User.IsInRole("admin"))
            {
                <div class="card service-request-card mb-4">
                    <div class="card-header bg-white">
                        <h5 class="card-title fw-bold mb-0">Manage Staff</h5>
                    </div>
                    <div class="card-body">
                        <form asp-action="AssignStaff" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="requestId" value="@Model.Id" />
                            <div class="mb-3">
                                <label class="info-label">Assign Staff Members</label>
                                <div class="accordion" id="staffAssignmentAccordion">
                                    @foreach (var department in ViewBag.StaffByDepartment)
                                    {
                                        var departmentId = department.Key.Replace(" ", "").Replace("&", "And").Replace("-", "").Replace(".", "");
                                        <div class="accordion-item mb-2">
                                            <h2 class="accordion-header">
                                                <button class="accordion-button collapsed" type="button" 
                                                        data-bs-toggle="collapse" 
                                                        data-bs-target="#department-assign-@departmentId">
                                                    @department.Key
                                                    <span class="badge bg-secondary ms-2">@department.Value.Count staff available</span>
                                                </button>
                                            </h2>
                                            <div id="department-assign-@departmentId" 
                                                 class="accordion-collapse collapse" 
                                                 data-bs-parent="#staffAssignmentAccordion">
                                                <div class="accordion-body">
                                                    <div class="list-group">
                                                        @foreach (var staff in department.Value)
                                                        {
                                                            <label class="list-group-item">
                                                                <input type="checkbox" name="staffIds" 
                                                                       value="@staff.Id" 
                                                                       class="form-check-input me-2">
                                                                <div>
                                                                    <div>@staff.UserName</div>
                                                                    <small class="text-muted">@staff.Staff.Position</small>
                                                                </div>
                                                            </label>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="material-icons">person_add</i> Assign Selected Staff
                            </button>
                        </form>
                    </div>
                </div>
            }

            @if (User.IsInRole("staff") && Model.StaffAssignments.Any(sa => sa.StaffId == currentUser.Id && sa.IsAccepted) && 
                 Model.Status != ServiceRequestStatus.Completed && Model.Status != ServiceRequestStatus.Rejected)
            {
                <div class="card service-request-card mb-4">
                    <div class="card-header bg-white">
                        <h5 class="card-title fw-bold mb-0">Update Status</h5>
                    </div>
                    <div class="card-body">
                        @if (Model.Status == ServiceRequestStatus.Completed)
                        {
                            <div class="alert alert-info">
                                <i class="material-icons align-middle me-2">info</i>
                                This service request has been completed. No further status updates are allowed.
                            </div>
                        }
                        else if (Model.Status == ServiceRequestStatus.Rejected)
                        {
                            <div class="alert alert-danger">
                                <i class="material-icons align-middle me-2">info</i>
                                This service request has been rejected. No further status updates are allowed.
                            </div>
                        }
                        else
                        {
                            <form asp-action="UpdateStatus" method="post">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="requestId" value="@Model.Id" />
                                <div class="mb-3">
                                    <label class="info-label">New Status</label>
                                    <select name="status" class="form-select" required>
                                        <option value="">Select status...</option>
                                        <option value="@ServiceRequestStatus.InProgress">In Progress</option>
                                        <option value="@ServiceRequestStatus.Completed">Completed</option>
                                        <option value="@ServiceRequestStatus.Rejected">Rejected</option>
                                    </select>
                                </div>
                                <div class="mb-3 rejection-reason" style="display: none;">
                                    <label class="info-label">Rejection Reason</label>
                                    <textarea name="rejectionReason" class="form-control" rows="3"></textarea>
                                </div>
                                <button type="submit" class="btn btn-primary w-100">
                                    <i class="material-icons">update</i> Update Status
                                </button>
                            </form>
                        }
                    </div>
                </div>
            }

            @if (User.IsInRole("homeowners") && Model.HomeownerId == currentUser.Id && Model.Status == ServiceRequestStatus.Pending)
            {
                <div class="card service-request-card mb-4">
                    <div class="card-header bg-white">
                        <h5 class="card-title fw-bold mb-0">Cancel Request</h5>
                    </div>
                    <div class="card-body">
                        <form asp-action="CancelRequest" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="requestId" value="@Model.Id" />
                            <div class="mb-3">
                                <label class="info-label">Cancellation Reason</label>
                                <textarea name="cancellationReason" class="form-control" rows="3" required></textarea>
                            </div>
                            <button type="submit" class="btn btn-warning w-100" onclick="return confirm('Are you sure you want to cancel this request?')">
                                <i class="material-icons">cancel</i> Cancel Request
                            </button>
                        </form>
                    </div>
                </div>
            }

            @if (User.IsInRole("admin"))
            {
                <div class="card service-request-card mb-4">
                    <div class="card-header bg-white">
                        <h5 class="card-title fw-bold mb-0">Delete Request</h5>
                    </div>
                    <div class="card-body">
                        <form asp-action="Delete" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@Model.Id" />
                            <button type="submit" class="btn btn-danger w-100" onclick="return confirm('Are you sure you want to delete this request? This action cannot be undone.')">
                                <i class="material-icons">delete</i> Delete Request
                            </button>
                        </form>
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="mt-4">
        <a asp-action="Index" class="btn btn-secondary">
            <i class="material-icons">arrow_back</i> Back to List
        </a>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const statusSelect = document.querySelector('select[name="status"]');
            const rejectionReasonDiv = document.querySelector('.rejection-reason');

            if (statusSelect && rejectionReasonDiv) {
                statusSelect.addEventListener('change', function () {
                    rejectionReasonDiv.style.display = 
                        this.value === '@ServiceRequestStatus.Rejected' ? 'block' : 'none';
                });
            }
        });
    </script>
}

@functions {
    private string GetStatusColor(ServiceRequestStatus status)
    {
        return status switch
        {
            ServiceRequestStatus.Pending => "warning",
            ServiceRequestStatus.Assigned => "info",
            ServiceRequestStatus.InProgress => "primary",
            ServiceRequestStatus.Completed => "success",
            ServiceRequestStatus.Rejected => "danger",
            ServiceRequestStatus.Cancelled => "secondary",
            _ => "secondary"
        };
    }
} 